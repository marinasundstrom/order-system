@page "/deliveries"
@using Radzen
@using Radzen.Blazor
@inject IMediator Mediator
@inject NavigationManager NavigationManager

<h1>Deliveries</h1>

<p>The deliveries.</p>

<button type="button" class="btn btn-primary" @onclick="GenerateDeliveries">Generate deliveries</button>

@if (deliveries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenScheduler @ref=@scheduler style="height: 768px;" TItem="Delivery" Data=@deliveries StartProperty="PlannedStartDate" EndProperty="PlannedEndDate"
        TextProperty="Description" SelectedIndex="2" AppointmentSelect=@OnAppointmentSelect >
        <RadzenDayView />
        <RadzenWeekView />
        <RadzenMonthView />
    </RadzenScheduler>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Status</th>
                <th>Order</th>
                <th>Subscription</th>
                <th>Planned Start</th>
                <th>Planned End</th>
                <th>Actual Start</th>
                <th>Actual End</th>
                <th>Invoice</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var delivery in deliveries)
            {
            <tr>
                <td><a href="/deliveries/@delivery.Id">@delivery.Id</a></td>
                <td>@delivery.Status</td>
                <td><a href="/orders/@delivery.Order.Id">@delivery.Order.Id</a></td>
                <td><a href="/subscriptions/@delivery?.Subscription?.Id">@delivery?.Subscription?.Id</a></td>
                <td>@delivery!.PlannedStartDate.ToString("g")</td>
                <td>@delivery.PlannedEndDate?.ToString("g")</td>
                <td>@delivery.ActualStartDate?.ToString("g")</td>
                <td>@delivery.ActualEndDate?.ToString("g")</td>
                <td><a href="/invoices/@delivery.InvoiceItem?.Invoice?.Id">@delivery.InvoiceItem?.Invoice?.Id</a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    RadzenScheduler<Delivery>? scheduler;

    private IEnumerable<Delivery>? deliveries;

    protected override async Task OnInitializedAsync()
    {
        deliveries = await Mediator.Send(new GetDeliveriesQuery(null));
    }

    void OnAppointmentSelect(SchedulerAppointmentSelectEventArgs<Delivery> args)
    {
        NavigationManager.NavigateTo($"/deliveries/{args.Data.Id}");
    }

    private async Task GenerateDeliveries()
    {
        await Mediator.Send(new GenerateDeliveriesCommand(null));

        deliveries = await Mediator.Send(new GetDeliveriesQuery(null));
    }
}
