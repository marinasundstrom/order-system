@page "/subscriptions/{Id:int}"
@inject IMediator Mediator
@using Commerce.Application.Subscriptions

@if (subscription == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Subscription @subscription.Id</h1>

    <h2>Details</h2>

        <table class="table table-striped">
        <tbody>
            <tr>
                <th>Subscription Plan</th>
                <td><a href="/subscriptions/plans/@subscription.SubscriptionPlan?.Id">@subscription.SubscriptionPlan?.Id</a></td>
            </tr>
            <tr>
                <th>Frequency</th>
                <td>@subscription.SubscriptionPlan?.GetDescription()</td>
            </tr>
        </tbody>
    </table>

    <table class="table table-striped">
        <tbody>
            <tr>
                <th>Order</th>
                <td><a href="/orders/@subscription.Order?.Id">@subscription.Order?.Id</a></td>
            </tr>
            <tr>
                <th>Order Item</th>
                <td>@subscription.OrderItem?.Id</td>
            </tr>
        </tbody>
    </table>

    <table class="table table-striped">
        <tbody>
            <tr>
                <th>Start Date</th>
                <td>@subscription.StartDate</td>
            </tr>
            <tr>
                <th>End Date</th>
                <td>@subscription.EndDate</td>
            </tr>
        </tbody>
    </table>

    <h2>Items</h2>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order</th>
                <th>Order Item</th>
                <th>Product</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Sub Total</th>
            </tr>
        </thead>
        <tbody>
            @if (subscription.Orders.Any())
            {
                @foreach (OrderItem orderItem in subscription.Orders.ElementAt(0)!.Items)
                {
                    <tr>
                        <td><a href="/orders/@orderItem.Order.Id">@orderItem.Order.Id</a></td>
                        <td>@orderItem?.Id</td>
                        <td><a href="/products/@orderItem?.Product?.Id">@orderItem?.Product?.Name</a></td>

                        <td>@orderItem!.UnitPrice</td>
                        <td>@orderItem.Quantity @orderItem.Unit</td>
                        <td>@orderItem.SubTotal</td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <h2>Orders</h2>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Status</th>
                <th>Planned Start</th>
                <th>Planned End</th>
                <th>Actual Start</th>
                <th>Actual End</th>
                <th>Invoice</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Order order in subscription.Orders)
            {
            <tr>
                <td><a href="/orders/@order.Id">@order.Id</a></td>
                <td>@order.Status</td>
                <td>@order?.PlannedStartDate.ToString("g")</td>
                <td>@order?.PlannedEndDate?.ToString("g")</td>
                <td>@order?.ActualStartDate?.ToString("g")</td>
                <td>@order?.ActualEndDate?.ToString("g")</td>
                <td><a href="/invoices/@order?.InvoiceItem?.Invoice?.Id">@order?.InvoiceItem?.Invoice?.Id</a></td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private Subscription? subscription;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        subscription = await Mediator.Send(new GetSubscriptionQuery(Id));
    }
}
